
service: get-proverbs
app: get-proverbs
org: zacdemi

custom:
  stage: ${opt:stage, self:provider.stage}
  tableName: ${self:custom.stage}-users

package:
  individually: true

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  stage: dev
  environment:
    tableName: ${self:custom.tableName}
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}
  
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 
        - "Fn::GetAtt": [ UsersTable, Arn ]

functions:
  create_user:
    handler: handler.create_user
    events:
      - http:
          path: users
          method: post
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: phone
            AttributeType: S
        KeySchema:
          - AttributeName: phone
            KeyType: HASH
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST

    CognitoUserPool:
      type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: cognito_sls_backend_user_pool

    CognitoUserPoolClient:
      type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: cognito_sls_backend_user_pool
        UserPoolId:
          Ref: CognitoUserPool

plugins:
  - serverless-python-requirements
